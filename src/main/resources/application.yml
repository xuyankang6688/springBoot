server:
  port: 8080
#  ssl:
#    key-store: ${javaguo.ssl.key-store}   # 证书名字
#    key-store-password: ${javaguo.ssl.key-store-password}        # 密钥库密码
#    key-store-type: ${javaguo.ssl.key-store-type}             # 行业标准PKCS12

logging:
  config: ${javaguo.logging.config}

spring:
  profiles: #读取配置文件
    active: dev  #测试环境
  #    active: pro #线上环境
  application:
    name: user
  datasource:
    # 驱动配置信息
    type: com.alibaba.druid.pool.DruidDataSource    # 连接池类型
    driver-class-name: com.mysql.jdbc.Driver        # mysql
    url: ${javaguo.datasource.url}
    username: ${javaguo.datasource.username}
    password: ${javaguo.datasource.password}      # 连接池的配置信息
    initialSize: 5                                  # 初始化大小
    minIdle: 5                                      # 初始化最小
    maxActive: 20                                   # 初始化最大
    maxWait: 60000                                  # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000            # 配置获取连接等待超时的时间
    minEvictableIdleTimeMillis: 300000              # 配置一个连接在池中最小生存的时间，单位是毫秒
    validationQuery: SELECT 1 FROM DUAL             # 校验SQL，如果不配validationQuery项，则下面三项配置无用
    testWhileIdle: true                             # 申请连接的时候检测，如果空闲时间大于 timeBetweenEvictionRunsMillis， 执行validationQuery检测连接是否有效。不影响性能，并且保证安全性。
    testOnBorrow: false                             # 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
    testOnReturn: false                             # 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
    poolPreparedStatements: true                    # 打开PSCache
    maxPoolPreparedStatementPerConnectionSize: 20   # 指定每个连接上PSCache的大小
    filters: stat,wall,log4j                        # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    connectionProperties:
      druid:
        stat:
          mergeSql: true  # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
          slowSqlMillis: 5000
  redis:
    host: ${javaguo.redis.host}
    port: ${javaguo.redis.port}
    #如果有密码
    password: ${javaguo.redis.password}
    timeout: 5000                         #客户端超时时间单位是毫秒 默认是2000
    maxIdle: 300                          #最大空闲数
    #  maxActive: 600                     #连接池的最大数据库连接数。设为0表示无限制,如果是jedis 2.4以后用  maxTotal
    maxTotal: 1000                        #控制一个pool可分配多少个jedis实例,用来替换上面的  maxActive,如果是jedis 2.4以后用该属性
    maxWaitMillis: 1000                   #最大建立连接等待时间。如果超过此时间将接到异常。设为-1表示无限制。
    minEvictableIdleTimeMillis: 300000    #连接的最小空闲时间 默认1800000毫秒(30分钟)
    numTestsPerEvictionRun: 1024          #每次释放连接的最大数目,默认3
    timeBetweenEvictionRunsMillis: 30000  #逐出扫描的时间间隔(毫秒) 如果为负数,则不运行逐出线程, 默认-1
    testOnBorrow: true                    #是否在从池中取出连接前进行检验,如果检验失败,则从池中去除连接并尝试取出另一个
    testWhileIdle: true                   #在空闲时检查有效性, 默认false

  mvc:
    static-path-pattern: /static/** #静态资源访问路径
    formcontent:
      putfilter:
        enabled: false

  resources:
    chain:
      strategy:
        content:
          enabled: true   # 是否开启内容版本策略
    cache:
      period: 1296000 # 资源缓存时间，单位秒

  #文件上传下载限制
  servlet:
    multipart:
      max-file-size: 10Mb       #单个文件大小，如果不限制大小，则设置为-1即可
      max-request-size: 100Mb   #总上传的数据大小，如果不限制大小，则设置为-1即可

mybatis.configuration.map-underscore-to-camel-case: true  #开启驼峰转换

#微信小程序参数
wx:
  miniProgram:
    customToken: ${javaguo.wx.miniProgram.customToken}
    appid: ${javaguo.wx.miniProgram.customToken}
    secret: ${javaguo.wx.miniProgram.secret}